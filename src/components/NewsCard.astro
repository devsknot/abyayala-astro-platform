---
import { formatDate } from '../utils/formatDate';
import CategoryTag from './CategoryTag.astro';

interface Props {
  title: string;
  description: string;
  pubDate?: Date | string;
  date?: Date | string;
  category: string;
  image: string;
  slug?: string;
  url?: string;
  featured?: boolean;
  isNew?: boolean;
}

const { 
  title, 
  description, 
  pubDate, 
  date, 
  category, 
  image, 
  slug, 
  url, 
  featured = false,
  isNew = false
} = Astro.props;

// Usar date si pubDate no está disponible
const dateToUse = pubDate || date;

// Normalizar la ruta de imagen (consolidar diferentes formatos posibles)
let normalizedImage = image || '';

// Si no hay imagen o si es una URL que sabemos que da error 404 (media/uploads/...)
if (!normalizedImage || normalizedImage.startsWith('media/uploads/')) {
  // Usar imagen de respaldo
  normalizedImage = '/img/placeholder-image.png';
}

// Limpiar URLs codificadas (+ o %25 se convierten en caracteres incorrectos en las rutas)
if (normalizedImage.includes('+') || normalizedImage.includes('%25')) {
  // Usar imagen de respaldo para URLs codificadas problemáticas
  normalizedImage = '/img/placeholder-image.png';
}

// Función para manejar la fecha de forma segura
const formatDateSafely = (date: Date | string | undefined) => {
  if (!date) return '';
  
  try {
    if (typeof date === 'string') {
      // Intentar convertir la cadena a objeto Date
      const dateObj = new Date(date);
      return dateObj.toISOString();
    } else if (date instanceof Date) {
      return date.toISOString();
    }
    return '';
  } catch (error) {
    console.error('Error al formatear la fecha:', error);
    return '';
  }
};

// Determinar la URL correcta para el enlace
const href = url || (slug ? `/news/${slug}/` : '#');

const isoDate = formatDateSafely(dateToUse);
const displayDate = dateToUse ? formatDate(dateToUse) : '';
---

<article 
  class={`news-card ${featured ? 'featured' : ''} ${isNew ? 'is-new' : ''}`}
  data-title={title}
  data-description={description}
  data-date={isoDate}
  data-category={category}
>
  <a href={href} class="news-card-link">
    <div class="image-container">
      <img 
        src={normalizedImage} 
        alt={title} 
        loading="lazy" 
        class={normalizedImage === '/img/placeholder-image.png' ? 'fallback-image' : ''}
        onerror="this.onerror=null; this.src='/img/placeholder-image.png'; this.classList.add('fallback-image');" 
      />
      <CategoryTag category={category} />
      {isNew && <span class="new-badge">Nuevo</span>}
    </div>
    <div class="content">
      {isoDate && <time datetime={isoDate}>{displayDate}</time>}
      <h3>{title}</h3>
      <p>{description}</p>
      <div class="read-more">
        <span>Leer más</span>
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="5" y1="12" x2="19" y2="12"></line>
          <polyline points="12 5 19 12 12 19"></polyline>
        </svg>
      </div>
    </div>
  </a>
</article>

<style>
  .news-card {
    background-color: var(--color-background);
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .news-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
  }

  .news-card-link {
    display: flex;
    flex-direction: column;
    height: 100%;
    text-decoration: none;
    color: inherit;
  }

  .image-container {
    position: relative;
    width: 100%;
    overflow: hidden;
    flex-grow: 0;
    flex-shrink: 0;
  }
  
  /* Clase específica para la imagen en tarjetas destacadas */
  .featured .image-container {
    height: 350px;
  }
  
  /* Altura estándar para tarjetas no destacadas */
  .news-card:not(.featured) .image-container {
    height: 200px;
  }

  .image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
    display: block;
  }
  
  /* Estilos específicos para imágenes de respaldo */
  .fallback-image {
    object-fit: contain !important;
    padding: 1rem;
    background-color: #f8f8f8;
    max-width: 100%;
    max-height: 100%;
  }

  .news-card:hover .image-container img {
    transform: scale(1.05);
  }

  .content {
    padding: 1.5rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  time {
    font-size: 0.875rem;
    color: rgba(var(--gray), 1);
    margin-bottom: 0.5rem;
    font-weight: 500;
  }

  h3 {
    font-size: 1.25rem;
    margin: 0 0 0.75rem 0;
    font-weight: 700;
    color: var(--color-text);
    line-height: 1.3;
    transition: color 0.2s ease;
  }

  .news-card:hover h3 {
    color: var(--color-primary);
  }

  p {
    font-size: 0.95rem;
    line-height: 1.5;
    color: rgba(var(--gray-dark), 1);
    margin: 0 0 1rem 0;
    flex-grow: 1;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .read-more {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--color-primary);
    margin-top: auto;
    transition: gap 0.3s ease;
  }

  .read-more svg {
    transition: transform 0.3s ease;
  }

  .news-card:hover .read-more {
    gap: 0.75rem;
  }

  .news-card:hover .read-more svg {
    transform: translateX(3px);
  }

  .featured {
    grid-column: span 2;
  }

  .featured .image-container {
    padding-bottom: 50%; /* Aspect ratio diferente para destacados */
  }
  
  /* Estilos para el badge de nuevo */
  .new-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: var(--color-primary);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    z-index: 2;
  }
  
  /* Estilos para artículos nuevos */
  .is-new {
    border: 2px solid var(--color-primary);
  }

  /* Estilos para la imagen de respaldo (logo) */
  .fallback-image {
    object-fit: contain !important;
    background-color: #f8f9fa;
    padding: 1rem;
  }

  .featured h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .featured p {
    font-size: 1rem;
    -webkit-line-clamp: 4;
  }

  /* Media queries para responsividad */
  @media (max-width: 1200px) {
    .content {
      padding: 1.25rem;
    }
    
    .featured h3 {
      font-size: 1.4rem;
    }
  }

  @media (max-width: 992px) {
    .featured {
      grid-column: span 1;
    }
    
    .featured .image-container {
      padding-bottom: 56.25%;
    }
  }

  @media (max-width: 768px) {
    h3 {
      font-size: 1.2rem;
    }
    
    .content {
      padding: 1rem;
    }
  }
</style>
